name: CLI CI

on:
  push:
    paths:
      - 'cli/**'
      - '.github/workflows/cli_ci.yml'
  pull_request:
    paths:
      - 'cli/**'
      - '.github/workflows/cli_ci.yml'

jobs:
  test:
    name: Build and Test CLI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
          
      - name: Build CLI
        working-directory: ./cli
        run: |
          echo "Building maestro-k CLI..."
          go mod download
          go build -ldflags="-s -w" -o maestro-k ./src
          chmod +x maestro-k
          echo "Build successful!"
          
      - name: Test CLI
        working-directory: ./
        run: |
          echo "Running CLI tests..."
          ./test.sh cli
          echo "All tests passed!"
          
      - name: Test CLI functionality
        run: |
          echo "Testing CLI functionality..."
          # Copy binary to root for testing
          cp cli/maestro-k ./maestro-k
          chmod +x ./maestro-k
          ./maestro-k --version
          ./maestro-k --help
          ./maestro-k validate --help
          
      - name: Test YAML validation
        run: |
          echo "Testing YAML validation..."
          # Copy binary to root for testing
          cp cli/maestro-k ./maestro-k
          chmod +x ./maestro-k
          # Test with valid YAML
          ./maestro-k validate --verbose tests/yamls/test_local_milvus.yaml
          
          # Test with schema validation
          ./maestro-k validate --verbose schemas/vector-database-schema.json tests/yamls/test_local_milvus.yaml
          
          # Test with invalid YAML (should fail)
          echo 'apiVersion: maestro/v1alpha1' > /tmp/invalid-test.yaml
          echo 'kind: VectorDatabase' >> /tmp/invalid-test.yaml
          echo 'metadata:' >> /tmp/invalid-test.yaml
          echo '  name: test-milvus' >> /tmp/invalid-test.yaml
          echo 'spec:' >> /tmp/invalid-test.yaml
          echo '  type: milvus' >> /tmp/invalid-test.yaml
          echo '  uri: localhost:19530' >> /tmp/invalid-test.yaml
          echo '  collection_name: test_collection' >> /tmp/invalid-test.yaml
          echo '  embedding: text-embedding-3-small' >> /tmp/invalid-test.yaml
          echo '  mode: local' >> /tmp/invalid-test.yaml
          echo '  api_version: "v1' >> /tmp/invalid-test.yaml
          
          ./maestro-k validate --verbose /tmp/invalid-test.yaml || echo "Invalid YAML correctly rejected"
          
          # Clean up
          rm -f /tmp/invalid-test.yaml
          
      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: maestro-k-cli
          path: maestro-k
          retention-days: 7
          
      - name: Show CLI info
        run: |
          echo "CLI binary information:"
          ls -lh maestro-k
          file maestro-k
          echo "CLI version:"
          ./maestro-k --version

  lint:
    name: Lint CLI Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
          
      - name: Install linting tools
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54.2
          
      - name: Run CLI linting
        working-directory: ./cli
        run: |
          echo "Running CLI linting checks..."
          ./lint.sh
          echo "All linting checks passed!" 