name: CLI Release

on:
  release:
    types: [published]

jobs:
  build:
    name: Build CLI Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          
      - name: Build CLI (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./cli
        run: |
          echo "Building maestro-k CLI for ${{ matrix.os }}..."
          go mod download
          
          $VERSION = "${{ github.ref_name }}"
          $BUILD_TIME = (Get-Date -Format "yyyy-MM-dd_HH:mm:ss_UTC").ToString()
          
          go build -ldflags="-s -w -X main.version=$VERSION -X main.buildTime=$BUILD_TIME" -o "maestro-k.exe" ./src
          echo "Build successful: maestro-k.exe"
          
      - name: Build CLI (Unix)
        if: matrix.os != 'windows-latest'
        working-directory: ./cli
        run: |
          echo "Building maestro-k CLI for ${{ matrix.os }}..."
          go mod download
          
          VERSION=${{ github.ref_name }}
          BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S_UTC')
          
          go build -ldflags="-s -w -X main.version=$VERSION -X main.buildTime=$BUILD_TIME" -o "maestro-k" ./src
          chmod +x maestro-k
          echo "Build successful: maestro-k"
          
      - name: Test CLI (Unix)
        if: matrix.os != 'windows-latest'
        working-directory: ./
        run: |
          echo "Running CLI tests..."
          ./test.sh cli
          echo "All tests passed!"
          
      - name: Test CLI (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./
        run: |
          echo "Skipping CLI tests on Windows (test.sh requires bash)"
          echo "Windows build completed successfully"
          
      - name: Test CLI functionality (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "Testing CLI functionality..."
          Copy-Item "cli/maestro-k.exe" "./maestro-k.exe"
          ./maestro-k.exe --version
          ./maestro-k.exe --help
          ./maestro-k.exe validate --help
          
      - name: Test CLI functionality (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          echo "Testing CLI functionality..."
          cp cli/maestro-k ./maestro-k
          chmod +x ./maestro-k
          ./maestro-k --version
          ./maestro-k --help
          ./maestro-k validate --help
          
      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: maestro-k-${{ matrix.os }}
          path: |
            maestro-k*
            maestro-k.exe
          retention-days: 30
          
      - name: Show CLI info (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "CLI binary information:"
          Get-ChildItem -Path "maestro-k.exe" | Select-Object Name, Length, LastWriteTime
          echo "CLI version:"
          ./maestro-k.exe --version
          
      - name: Show CLI info (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          echo "CLI binary information:"
          ls -lh maestro-k
          file maestro-k
          echo "CLI version:"
          ./maestro-k --version 